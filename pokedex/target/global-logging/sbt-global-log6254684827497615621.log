[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: bloop.integrations.sbt.Offloader$$anon$1@63d3c9dc, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/18284/Desktop/ScalaProjects/pokedex/src/main/scala/example/Pokedex.scala","languageId":"scala","version":1,"text":"package example\n\nimport org.mongodb.scala._\nimport org.mongodb.scala.model._\n\nimport org.mongodb.scala.model.Filters._\nimport org.mongodb.scala.model.Sorts._\nimport org.mongodb.scala.model.Projections._\nimport org.mongodb.scala.model.Aggregates._\nimport org.mongodb.scala.model.Updates._\n\nimport example.Helpers._\n\nobject Pokedex {\n    def main(args: Array[String]){\n        Space.printSpace\n        println(\"Starting MongoDB - Scala\")\n        Space.printSpace\n\n        val client: MongoClient = MongoClient()\n        val database: MongoDatabase = client.getDatabase(\"ScalaProjectsDB\")\n        val collection: MongoCollection[Document] = database.getCollection(\"pokedexData\")\n        Thread.sleep(5000)\n        \n        menu\n    }\n\n    var selection = 0\n\n    def menu = {\n        Space.printSpace\n        println(\"Make a selection\")\n        println(\"1: Query the Pokedex\")\n\n        selection = scala.io.StdIn.readInt()\n\n        selection match{\n            case 1 => queryPokedex  \n            case 2 =>    \n            case _ => \n        }\n    }\n\n    def queryPokedex = {\n        println(\"Select a Query\")\n        println(\"Show First 10 Pokemon\")\n        println(\"Show Last 10 Pokemon\")\n\n        selection = scala.io.StdIn.readInt()\n\n        selection match{\n            case 1 =>   collection.find()\n            case 2 =>   \n            case _ => \n        }\n    }\n}\n"}})[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (C:\Users\18284\Desktop\ScalaProjects\pokedex\target\scala-2.13\zinc\inc_compile_2.13.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 0 s, completed Nov 30, 2021, 6:51:47 PM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///c%3A/Users/18284/Desktop/ScalaProjects/pokedex/build.sbt","languageId":"scala","version":1,"text":"import Dependencies._\r\n\r\nThisBuild / scalaVersion     := \"2.13.6\"\r\nThisBuild / version          := \"0.1.0-SNAPSHOT\"\r\nThisBuild / organization     := \"com.example\"\r\nThisBuild / organizationName := \"example\"\r\n\r\nlazy val root = (project in file(\".\"))\r\n  .settings(\r\n    name := \"Pokedex\",\r\n    libraryDependencies += \"org.scalatest\" %% \"scalatest\" % \"3.0.8\" % Test,\r\n    libraryDependencies += \"org.mongodb.scala\" %% \"mongo-scala-driver\" % \"2.8.0\"\r\n  )"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled request received: shutdown: JsonRpcRequestMessage(2.0, â™¨1, shutdown, null})[0m
